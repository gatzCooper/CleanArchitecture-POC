{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.26.54.24096",
      "templateHash": "463277473498219752"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The location into which your Azure resources should be deployed."
      }
    },
    "environmentName": {
      "type": "string",
      "allowedValues": [
        "Production",
        "Staging",
        "Development"
      ],
      "metadata": {
        "description": "Select the type of environment you want to provision. Allowed values are Production, Staging, and Development."
      }
    },
    "resourceNameSuffix": {
      "type": "string",
      "defaultValue": "[uniqueString(resourceGroup().id)]",
      "maxLength": 13,
      "metadata": {
        "description": "A unique suffix to add to resource names that need to be globally unique."
      }
    },
    "sqlAdministratorUsername": {
      "type": "string",
      "metadata": {
        "description": "The administrator login username for the SQL server."
      }
    },
    "sqlAdministratorPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The administrator login password for the SQL server."
      }
    },
    "projectName": {
      "type": "string",
      "metadata": {
        "description": "The name of the project."
      }
    }
  },
  "variables": {
    "environmentConfigurationMap": {
      "Production": {
        "environmentAbbreviation": "prd",
        "appServicePlan": {
          "sku": {
            "name": "S1",
            "capacity": 1
          }
        },
        "sqlDatabase": {
          "sku": {
            "name": "Standard",
            "tier": "Standard"
          }
        }
      },
      "Staging": {
        "environmentAbbreviation": "stg",
        "appServicePlan": {
          "sku": {
            "name": "B1"
          }
        },
        "sqlDatabase": {
          "sku": {
            "name": "Standard",
            "tier": "Standard"
          }
        }
      },
      "Development": {
        "environmentAbbreviation": "dev",
        "appServicePlan": {
          "sku": {
            "name": "B1"
          }
        },
        "sqlDatabase": {
          "sku": {
            "name": "Standard",
            "tier": "Standard"
          }
        }
      }
    },
    "environmentAbbreviation": "[variables('environmentConfigurationMap')[parameters('environmentName')].environmentAbbreviation]",
    "keyVaultName": "[format('kv-{0}-{1}', parameters('projectName'), variables('environmentAbbreviation'))]",
    "appServiceAppName": "[format('as-{0}-{1}-{2}', parameters('projectName'), parameters('resourceNameSuffix'), variables('environmentAbbreviation'))]",
    "appServicePlanName": "[format('plan-{0}-{1}', parameters('projectName'), variables('environmentAbbreviation'))]",
    "logAnalyticsWorkspaceName": "[format('log-{0}-{1}', parameters('projectName'), variables('environmentAbbreviation'))]",
    "applicationInsightsName": "[format('appi-{0}-{1}', parameters('projectName'), variables('environmentAbbreviation'))]",
    "sqlServerName": "[format('sql-{0}-{1}-{2}', parameters('projectName'), parameters('resourceNameSuffix'), variables('environmentAbbreviation'))]",
    "sqlDatabaseName": "[format('{0}-{1}', parameters('projectName'), variables('environmentAbbreviation'))]",
    "appServicePlanSku": "[variables('environmentConfigurationMap')[parameters('environmentName')].appServicePlan.sku]",
    "sqlDatabaseSku": "[variables('environmentConfigurationMap')[parameters('environmentName')].sqlDatabase.sku]"
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2020-10-01",
      "name": "[variables('logAnalyticsWorkspaceName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "name": "PerGB2018"
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2019-09-01",
      "name": "[variables('keyVaultName')]",
      "location": "[parameters('location')]",
      "properties": {
        "enabledForTemplateDeployment": true,
        "tenantId": "[subscription().tenantId]",
        "accessPolicies": [],
        "sku": {
          "name": "standard",
          "family": "A"
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2019-09-01",
      "name": "[format('{0}/{1}', variables('keyVaultName'), 'ConnectionStrings--DefaultConnection')]",
      "properties": {
        "value": "[format('Server=tcp:{0},1433;Initial Catalog={1};Persist Security Info=False;User ID={2};Password={3};MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;', reference(resourceId('Microsoft.Sql/servers', variables('sqlServerName')), '2021-02-01-preview').fullyQualifiedDomainName, variables('sqlDatabaseName'), parameters('sqlAdministratorUsername'), parameters('sqlAdministratorPassword'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
        "[resourceId('Microsoft.Sql/servers/databases', variables('sqlServerName'), variables('sqlDatabaseName'))]",
        "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]"
      ]
    },
    {
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2021-05-01-preview",
      "scope": "[format('Microsoft.KeyVault/vaults/{0}', variables('keyVaultName'))]",
      "name": "keyVaultDiagnosticSettings",
      "properties": {
        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]",
        "logs": [
          {
            "category": "AuditEvent",
            "enabled": true
          }
        ],
        "metrics": [
          {
            "category": "AllMetrics",
            "enabled": true
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2021-01-15",
      "name": "[variables('appServicePlanName')]",
      "location": "[parameters('location')]",
      "sku": "[variables('appServicePlanSku')]"
    },
    {
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2021-05-01-preview",
      "scope": "[format('Microsoft.Web/serverfarms/{0}', variables('appServicePlanName'))]",
      "name": "appServicePlanDiagnosticSettings",
      "properties": {
        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]",
        "metrics": [
          {
            "category": "AllMetrics",
            "enabled": true
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-01-15",
      "name": "[variables('appServiceAppName')]",
      "location": "[parameters('location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "httpsOnly": true,
        "siteConfig": {
          "healthCheckPath": "/health",
          "netFrameworkVersion": "v7.0",
          "appSettings": [
            {
              "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2020-02-02').ConnectionString]"
            },
            {
              "name": "KeyVaultUri",
              "value": "[reference(resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName')), '2019-09-01').vaultUri]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))]",
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2021-05-01-preview",
      "scope": "[format('Microsoft.Web/sites/{0}', variables('appServiceAppName'))]",
      "name": "appServiceAppDiagnosticSettings",
      "properties": {
        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]",
        "logs": [
          {
            "category": "AppServiceHTTPLogs",
            "enabled": true
          },
          {
            "category": "AppServiceConsoleLogs",
            "enabled": true
          },
          {
            "category": "AppServiceAppLogs",
            "enabled": true
          },
          {
            "category": "AppServiceAuditLogs",
            "enabled": true
          },
          {
            "category": "AppServiceIPSecAuditLogs",
            "enabled": true
          },
          {
            "category": "AppServicePlatformLogs",
            "enabled": true
          }
        ],
        "metrics": [
          {
            "category": "AllMetrics",
            "enabled": true
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('appServiceAppName'))]",
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/accessPolicies",
      "apiVersion": "2022-07-01",
      "name": "[format('{0}/{1}', variables('keyVaultName'), 'add')]",
      "properties": {
        "accessPolicies": [
          {
            "tenantId": "[reference(resourceId('Microsoft.Web/sites', variables('appServiceAppName')), '2021-01-15', 'full').identity.tenantId]",
            "objectId": "[reference(resourceId('Microsoft.Web/sites', variables('appServiceAppName')), '2021-01-15', 'full').identity.principalId]",
            "permissions": {
              "keys": [
                "Get"
              ],
              "secrets": [
                "Get",
                "List"
              ],
              "certificates": [
                "Get",
                "List"
              ]
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('appServiceAppName'))]",
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
      ]
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[variables('applicationInsightsName')]",
      "location": "[parameters('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]"
      ]
    },
    {
      "type": "Microsoft.Sql/servers",
      "apiVersion": "2021-02-01-preview",
      "name": "[variables('sqlServerName')]",
      "location": "[parameters('location')]",
      "properties": {
        "administratorLogin": "[parameters('sqlAdministratorUsername')]",
        "administratorLoginPassword": "[parameters('sqlAdministratorPassword')]"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases",
      "apiVersion": "2021-02-01-preview",
      "name": "[format('{0}/{1}', variables('sqlServerName'), variables('sqlDatabaseName'))]",
      "location": "[parameters('location')]",
      "sku": "[variables('sqlDatabaseSku')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]"
      ]
    },
    {
      "type": "Microsoft.Sql/servers/auditingSettings",
      "apiVersion": "2021-11-01-preview",
      "name": "[format('{0}/{1}', variables('sqlServerName'), 'default')]",
      "properties": {
        "state": "Enabled",
        "isAzureMonitorTargetEnabled": true
      },
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]"
      ]
    },
    {
      "type": "Microsoft.Sql/servers/firewallRules",
      "apiVersion": "2021-02-01-preview",
      "name": "[format('{0}/{1}', variables('sqlServerName'), 'AllowAllWindowsAzureIps')]",
      "properties": {
        "endIpAddress": "0.0.0.0",
        "startIpAddress": "0.0.0.0"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]"
      ]
    },
    {
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2021-05-01-preview",
      "scope": "[format('Microsoft.Sql/servers/{0}/databases/{1}', variables('sqlServerName'), variables('sqlDatabaseName'))]",
      "name": "sqlDatabaseDiagnosticSettings",
      "properties": {
        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]",
        "logs": [
          {
            "category": "SQLInsights",
            "enabled": true
          },
          {
            "category": "AutomaticTuning",
            "enabled": true
          },
          {
            "category": "QueryStoreRuntimeStatistics",
            "enabled": true
          },
          {
            "category": "QueryStoreWaitStatistics",
            "enabled": true
          },
          {
            "category": "Errors",
            "enabled": true
          },
          {
            "category": "DatabaseWaitStatistics",
            "enabled": true
          },
          {
            "category": "Timeouts",
            "enabled": true
          },
          {
            "category": "Blocks",
            "enabled": true
          },
          {
            "category": "Deadlocks",
            "enabled": true
          }
        ],
        "metrics": [
          {
            "category": "Basic",
            "enabled": true
          },
          {
            "category": "InstanceAndAppAdvanced",
            "enabled": true
          },
          {
            "category": "WorkloadManagement",
            "enabled": true
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]",
        "[resourceId('Microsoft.Sql/servers/databases', variables('sqlServerName'), variables('sqlDatabaseName'))]"
      ]
    }
  ],
  "outputs": {
    "appServiceAppName": {
      "type": "string",
      "value": "[variables('appServiceAppName')]"
    },
    "appServiceAppHostName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Web/sites', variables('appServiceAppName')), '2021-01-15').defaultHostName]"
    },
    "sqlServerFullyQualifiedDomainName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Sql/servers', variables('sqlServerName')), '2021-02-01-preview').fullyQualifiedDomainName]"
    },
    "sqlDatabaseName": {
      "type": "string",
      "value": "[variables('sqlDatabaseName')]"
    }
  }
}